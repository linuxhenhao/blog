<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>network on ThinkerYu的博客</title><link>https://blog.huangyu.me/categories/network/</link><description>Recent content in network on ThinkerYu的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 14 Jan 2018 16:28:08 +0800</lastBuildDate><atom:link href="https://blog.huangyu.me/categories/network/index.xml" rel="self" type="application/rss+xml"/><item><title>Privoxy替代foxyproxy Firefox57后遗症</title><link>https://blog.huangyu.me/post/privoxy%E6%9B%BF%E4%BB%A3foxyproxy-firefox57%E5%90%8E%E9%81%97%E7%97%87/</link><pubDate>Sun, 14 Jan 2018 16:28:08 +0800</pubDate><guid>https://blog.huangyu.me/post/privoxy%E6%9B%BF%E4%BB%A3foxyproxy-firefox57%E5%90%8E%E9%81%97%E7%97%87/</guid><description>&lt;p>正常的网络访问之前使用的是foxyproxy+gfwlist-rules的方式实现的。在firefox更新到57之后，扩展
大变革，原有的foxyproxy不能用了，而新的foxyproxy功能明显很弱。虽然采用import之前配置文件的
方式可以将之前包含有gfwlist-rules的配置导入，但是能够明显感觉到速度很慢。为了能够无感觉的对block
和非block的网络进行访问，寻找privoxy+gfwlist作为替代，将整个浏览器的代理设为privoxy，从而将
选择性代理的任务交给privoxy。&lt;/p></description></item><item><title>百度网盘ari2c加速下载</title><link>https://blog.huangyu.me/post/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98ari2c%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD/</link><pubDate>Sun, 24 Dec 2017 15:56:43 +0800</pubDate><guid>https://blog.huangyu.me/post/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98ari2c%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD/</guid><description>&lt;p>百度云下载时候的限速是众所周知的，不买vip就限速，就是这么任性。但是挡不住程序员们，有人
就通过分析得到了获取百度云实际链接的方法，通过实际链接+多线程下载的方式可以获取到较好速度。&lt;/p></description></item><item><title>Tcp_congestion_control BBR KCP CDG非拥塞丢包情景对比</title><link>https://blog.huangyu.me/post/tcp_congestion_control-bbr-kcp-cdg%E9%9D%9E%E6%8B%A5%E5%A1%9E%E4%B8%A2%E5%8C%85%E6%83%85%E6%99%AF%E5%AF%B9%E6%AF%94/</link><pubDate>Sat, 09 Dec 2017 10:04:36 +0800</pubDate><guid>https://blog.huangyu.me/post/tcp_congestion_control-bbr-kcp-cdg%E9%9D%9E%E6%8B%A5%E5%A1%9E%E4%B8%A2%E5%8C%85%E6%83%85%E6%99%AF%E5%AF%B9%E6%AF%94/</guid><description>&lt;p>题目很可怕，然而实际上主要是要通过论文分析cdg，然后根据BBR和kcp介绍的特性判断一下哪种
拥塞控制算法最适合有一定非拥塞导致的丢包的网络环境（连通vps常见场景）。&lt;/p></description></item><item><title>Iptables中owener信息的来源以及wireguard发包带有owner信息的原因探索</title><link>https://blog.huangyu.me/post/iptables%E4%B8%ADowener%E4%BF%A1%E6%81%AF%E7%9A%84%E6%9D%A5%E6%BA%90/</link><pubDate>Mon, 30 Oct 2017 19:41:47 +0800</pubDate><guid>https://blog.huangyu.me/post/iptables%E4%B8%ADowener%E4%BF%A1%E6%81%AF%E7%9A%84%E6%9D%A5%E6%BA%90/</guid><description>&lt;p>在上一篇关于iptables让特定程序走特定网卡的文章中用到了iptables的owner match，有些好奇
到底是如何知道&lt;code>uid、gid&lt;/code>信息的。简单看了眼kernel的代码，应该是找到了答案。&lt;/p></description></item><item><title>Linux下让某程序的所有数据包通过指定网口发出</title><link>https://blog.huangyu.me/post/linux%E4%B8%8B%E8%AE%A9%E6%9F%90%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%80%E6%9C%89%E6%95%B0%E6%8D%AE%E5%8C%85%E9%80%9A%E8%BF%87%E6%8C%87%E5%AE%9A%E7%BD%91%E5%8F%A3%E5%8F%91%E5%87%BA/</link><pubDate>Sun, 29 Oct 2017 13:27:35 +0800</pubDate><guid>https://blog.huangyu.me/post/linux%E4%B8%8B%E8%AE%A9%E6%9F%90%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%80%E6%9C%89%E6%95%B0%E6%8D%AE%E5%8C%85%E9%80%9A%E8%BF%87%E6%8C%87%E5%AE%9A%E7%BD%91%E5%8F%A3%E5%8F%91%E5%87%BA/</guid><description>&lt;p>让某程序的所有数据通过指定网口发出。这是结合上一篇搭建的虚拟连接实现的特定功能，达到一些
目的——比如让没有WAN地址的服务通过vps具备的WAN地址提供交互（可以了解一下&lt;a href="https://github.com/fatedier/frp">frp&lt;/a>）。&lt;/p></description></item><item><title>记wireguard的ip Rule配置问题</title><link>https://blog.huangyu.me/post/%E8%AE%B0wireguard%E7%9A%84ip-rule%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 28 Oct 2017 21:24:28 +0800</pubDate><guid>https://blog.huangyu.me/post/%E8%AE%B0wireguard%E7%9A%84ip-rule%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</guid><description>&lt;p>虽然学过计算机网络, 但是实践却并不多, 这里以wireguard建立的连接为例, 实践了一下路由配置,
更详细的了解了linux系统下路由的体系.&lt;/p></description></item></channel></rss>